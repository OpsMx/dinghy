name: dinghy
on:
  push:

jobs:
  main:
    env:
      BASE_PROJECT: dinghy
      GRGIT_USER: GitHub
      GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}
      GRADLE_ARGS: -Partifactory_user=${{secrets.ARTIFACTORY_USER}} -Partifactory_password=${{secrets.ARTIFACTORY_PASSWORD}} --info -x dockerClean -x dockerPrepare
      AWS_ACCESS_KEY_ID: ${{ secrets.LAMBDA_PUBLISHER_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.LAMBDA_PUBLISHER_AWS_SECRET_ACCESS_KEY }}
      BUCKET_URL: ${{ secrets.LAMBDA_PUBLISHER_BUCKET_BASE_URL }}
      AWS_EC2_METADATA_DISABLED: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Fetch full history
        run: git fetch --prune --tags --unshallow

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Login to Artifactory
        run: |
          docker login -u ${{ secrets.ARTIFACTORY_USER }} -p ${{ secrets.ARTIFACTORY_PASSWORD }} armory-docker-local.jfrog.io

      - name: create softlink for docker plugin
        run: |
          rm -fr build/docker
          mkdir -p build
          ln -sf $(pwd) $(pwd)/build/docker

      - name: Generate Variables
        id: variables
        uses: armory-io/astrolabe-build-defaults@main

      - name: Publish devSnapshot
        if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/heads/release-')
        run: |
          ./gradlew -Prelease.version=${{ steps.variables.outputs.version_as_semver }} devSnapshot docker dockerPush $GRADLE_ARGS --stacktrace
          echo "BUILD_NUMBER=$(./gradlew $GRADLE_ARGS printVersion|grep VERSION|awk -F: '{print $2}')" >> $GITHUB_ENV
